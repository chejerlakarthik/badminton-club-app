{
 "Resources": {
  "MainTable74195DAB": {
   "Type": "AWS::DynamoDB::GlobalTable",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI1PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI1SK",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "GSI1",
      "KeySchema": [
       {
        "AttributeName": "GSI1PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI1SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "Replicas": [
     {
      "GlobalSecondaryIndexes": [
       {
        "IndexName": "GSI1"
       }
      ],
      "Region": "ap-southeast-2"
     }
    ],
    "TableName": "badminton-club-dev-main"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/MainTable/Resource"
   }
  },
  "RegisterLambdaServiceRole8E677BA9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/RegisterLambda/ServiceRole/Resource"
   }
  },
  "RegisterLambdaServiceRoleDefaultPolicy9CE91415": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RegisterLambdaServiceRoleDefaultPolicy9CE91415",
    "Roles": [
     {
      "Ref": "RegisterLambdaServiceRole8E677BA9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/RegisterLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RegisterLambda5E35AF61": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/auth/register.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RegisterLambdaServiceRole8E677BA9",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "RegisterLambdaServiceRoleDefaultPolicy9CE91415",
    "RegisterLambdaServiceRole8E677BA9"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/RegisterLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LoginLambdaServiceRoleD7CD1D70": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/LoginLambda/ServiceRole/Resource"
   }
  },
  "LoginLambdaServiceRoleDefaultPolicy1D9CE697": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LoginLambdaServiceRoleDefaultPolicy1D9CE697",
    "Roles": [
     {
      "Ref": "LoginLambdaServiceRoleD7CD1D70"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/LoginLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LoginLambda25499490": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/auth/login.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LoginLambdaServiceRoleD7CD1D70",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "LoginLambdaServiceRoleDefaultPolicy1D9CE697",
    "LoginLambdaServiceRoleD7CD1D70"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/LoginLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetProfileLambdaServiceRoleD7694CBC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/GetProfileLambda/ServiceRole/Resource"
   }
  },
  "GetProfileLambdaServiceRoleDefaultPolicy1BD3DB82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetProfileLambdaServiceRoleDefaultPolicy1BD3DB82",
    "Roles": [
     {
      "Ref": "GetProfileLambdaServiceRoleD7694CBC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/GetProfileLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetProfileLambda5F8EE9C2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/users/get-profile.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetProfileLambdaServiceRoleD7694CBC",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetProfileLambdaServiceRoleDefaultPolicy1BD3DB82",
    "GetProfileLambdaServiceRoleD7694CBC"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/GetProfileLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UpdateProfileLambdaServiceRoleC826D88F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/UpdateProfileLambda/ServiceRole/Resource"
   }
  },
  "UpdateProfileLambdaServiceRoleDefaultPolicy1CD12416": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UpdateProfileLambdaServiceRoleDefaultPolicy1CD12416",
    "Roles": [
     {
      "Ref": "UpdateProfileLambdaServiceRoleC826D88F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/UpdateProfileLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UpdateProfileLambdaBE1476B4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/users/update-profile.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "UpdateProfileLambdaServiceRoleC826D88F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "UpdateProfileLambdaServiceRoleDefaultPolicy1CD12416",
    "UpdateProfileLambdaServiceRoleC826D88F"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/UpdateProfileLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateBookingLambdaServiceRoleD6C53C6C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CreateBookingLambda/ServiceRole/Resource"
   }
  },
  "CreateBookingLambdaServiceRoleDefaultPolicy5916A17B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateBookingLambdaServiceRoleDefaultPolicy5916A17B",
    "Roles": [
     {
      "Ref": "CreateBookingLambdaServiceRoleD6C53C6C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CreateBookingLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateBookingLambdaFCD2A497": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/bookings/create.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CreateBookingLambdaServiceRoleD6C53C6C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CreateBookingLambdaServiceRoleDefaultPolicy5916A17B",
    "CreateBookingLambdaServiceRoleD6C53C6C"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CreateBookingLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateCourtLambdaServiceRoleFBB08A02": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CreateCourtLambda/ServiceRole/Resource"
   }
  },
  "CreateCourtLambdaServiceRoleDefaultPolicy310F99AE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateCourtLambdaServiceRoleDefaultPolicy310F99AE",
    "Roles": [
     {
      "Ref": "CreateCourtLambdaServiceRoleFBB08A02"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CreateCourtLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateCourtLambdaDE87D144": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/courts/create-court.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CreateCourtLambdaServiceRoleFBB08A02",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CreateCourtLambdaServiceRoleDefaultPolicy310F99AE",
    "CreateCourtLambdaServiceRoleFBB08A02"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CreateCourtLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetCourtsLambdaServiceRole270BE192": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/GetCourtsLambda/ServiceRole/Resource"
   }
  },
  "GetCourtsLambdaServiceRoleDefaultPolicy468016AA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCourtsLambdaServiceRoleDefaultPolicy468016AA",
    "Roles": [
     {
      "Ref": "GetCourtsLambdaServiceRole270BE192"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/GetCourtsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCourtsLambda6B243DA6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/courts/get-courts.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetCourtsLambdaServiceRole270BE192",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetCourtsLambdaServiceRoleDefaultPolicy468016AA",
    "GetCourtsLambdaServiceRole270BE192"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/GetCourtsLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BookingProcessorLambdaServiceRole3FE777E6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BookingProcessorLambda/ServiceRole/Resource"
   }
  },
  "BookingProcessorLambdaServiceRoleDefaultPolicy07EADC47": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MainTable74195DAB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MainTable74195DAB",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutEvents",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "sns:Publish"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BookingProcessorLambdaServiceRoleDefaultPolicy07EADC47",
    "Roles": [
     {
      "Ref": "BookingProcessorLambdaServiceRole3FE777E6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BookingProcessorLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "BookingProcessorLambdaB8164A7A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-762233758459-ap-southeast-2",
     "S3Key": "a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "REGION": "ap-southeast-2",
      "MAIN_TABLE": {
       "Ref": "MainTable74195DAB"
      },
      "JWT_SECRET": "test-secret-key"
     }
    },
    "Handler": "app/lambdas/events/booking-processor.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "BookingProcessorLambdaServiceRole3FE777E6",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "BookingProcessorLambdaServiceRoleDefaultPolicy07EADC47",
    "BookingProcessorLambdaServiceRole3FE777E6"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BookingProcessorLambda/Resource",
    "aws:asset:path": "asset.a333601334b32f3db1e5cbdeb1c68b3b26e3746e8c45fc83e56ae3894be0e13e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BadmintonClubApi5D28A112": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Badminton Club Service"
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Resource"
   }
  },
  "BadmintonClubApiDeployment017E22C3104331ac0efdcb3c33606c87747cc46a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "DependsOn": [
    "BadmintonClubApiauthloginOPTIONS01A99FCF",
    "BadmintonClubApiauthloginPOST681BD560",
    "BadmintonClubApiauthlogin60272BFE",
    "BadmintonClubApiauthOPTIONS400BAA94",
    "BadmintonClubApiauthregisterOPTIONSE3353033",
    "BadmintonClubApiauthregisterPOST58840186",
    "BadmintonClubApiauthregister11D9CF9A",
    "BadmintonClubApiauth9DC0262F",
    "BadmintonClubApibookingsOPTIONS29D17A0C",
    "BadmintonClubApibookingsPOSTBB420E48",
    "BadmintonClubApibookingsD65E354D",
    "BadmintonClubApicourtsGET8B94915C",
    "BadmintonClubApicourtsOPTIONSFE3EEA5A",
    "BadmintonClubApicourtsPOST133303C1",
    "BadmintonClubApicourtsFED2D4E7",
    "BadmintonClubApiOPTIONS6EB9AD57",
    "BadmintonClubApiusersOPTIONSFAC086F9",
    "BadmintonClubApiusersprofileGETCF70A070",
    "BadmintonClubApiusersprofileOPTIONS56F89FE2",
    "BadmintonClubApiusersprofilePUT65FE6768",
    "BadmintonClubApiusersprofileAB9B630A",
    "BadmintonClubApiusersC76F1A63"
   ],
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Deployment/Resource"
   }
  },
  "BadmintonClubApiDeploymentStagedevBF744B2F": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "BadmintonClubApiDeployment017E22C3104331ac0efdcb3c33606c87747cc46a"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/DeploymentStage.dev/Resource"
   }
  },
  "BadmintonClubApiOPTIONS6EB9AD57": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "BadmintonClubApi5D28A112",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/OPTIONS/Resource"
   }
  },
  "BadmintonClubApiauth9DC0262F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BadmintonClubApi5D28A112",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/Resource"
   }
  },
  "BadmintonClubApiauthOPTIONS400BAA94": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApiauth9DC0262F"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/OPTIONS/Resource"
   }
  },
  "BadmintonClubApiauthregister11D9CF9A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BadmintonClubApiauth9DC0262F"
    },
    "PathPart": "register",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/register/Resource"
   }
  },
  "BadmintonClubApiauthregisterOPTIONSE3353033": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApiauthregister11D9CF9A"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/register/OPTIONS/Resource"
   }
  },
  "BadmintonClubApiauthregisterPOSTApiPermissionBadmintonClubStackBadmintonClubApi105BDD2APOSTauthregister79301A1B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RegisterLambda5E35AF61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/POST/auth/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/register/POST/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.POST..auth.register"
   }
  },
  "BadmintonClubApiauthregisterPOSTApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2APOSTauthregister247A2CEC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RegisterLambda5E35AF61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/POST/auth/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/register/POST/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.POST..auth.register"
   }
  },
  "BadmintonClubApiauthregisterPOST58840186": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RegisterLambda5E35AF61",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApiauthregister11D9CF9A"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/register/POST/Resource"
   }
  },
  "BadmintonClubApiauthlogin60272BFE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BadmintonClubApiauth9DC0262F"
    },
    "PathPart": "login",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/login/Resource"
   }
  },
  "BadmintonClubApiauthloginOPTIONS01A99FCF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApiauthlogin60272BFE"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/login/OPTIONS/Resource"
   }
  },
  "BadmintonClubApiauthloginPOSTApiPermissionBadmintonClubStackBadmintonClubApi105BDD2APOSTauthlogin2597C095": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LoginLambda25499490",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/POST/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/login/POST/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.POST..auth.login"
   }
  },
  "BadmintonClubApiauthloginPOSTApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2APOSTauthlogin3D1B9623": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LoginLambda25499490",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/POST/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/login/POST/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.POST..auth.login"
   }
  },
  "BadmintonClubApiauthloginPOST681BD560": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LoginLambda25499490",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApiauthlogin60272BFE"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/auth/login/POST/Resource"
   }
  },
  "BadmintonClubApiusersC76F1A63": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BadmintonClubApi5D28A112",
      "RootResourceId"
     ]
    },
    "PathPart": "users",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/Resource"
   }
  },
  "BadmintonClubApiusersOPTIONSFAC086F9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApiusersC76F1A63"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/OPTIONS/Resource"
   }
  },
  "BadmintonClubApiusersprofileAB9B630A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BadmintonClubApiusersC76F1A63"
    },
    "PathPart": "profile",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/Resource"
   }
  },
  "BadmintonClubApiusersprofileOPTIONS56F89FE2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApiusersprofileAB9B630A"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/OPTIONS/Resource"
   }
  },
  "BadmintonClubApiusersprofileGETApiPermissionBadmintonClubStackBadmintonClubApi105BDD2AGETusersprofileA05EC7D9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProfileLambda5F8EE9C2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/GET/users/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/GET/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.GET..users.profile"
   }
  },
  "BadmintonClubApiusersprofileGETApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2AGETusersprofileE76F746D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProfileLambda5F8EE9C2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/GET/users/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/GET/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.GET..users.profile"
   }
  },
  "BadmintonClubApiusersprofileGETCF70A070": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProfileLambda5F8EE9C2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApiusersprofileAB9B630A"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/GET/Resource"
   }
  },
  "BadmintonClubApiusersprofilePUTApiPermissionBadmintonClubStackBadmintonClubApi105BDD2APUTusersprofile0AB7FF7C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UpdateProfileLambdaBE1476B4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/PUT/users/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/PUT/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.PUT..users.profile"
   }
  },
  "BadmintonClubApiusersprofilePUTApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2APUTusersprofileBE5CAF6A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UpdateProfileLambdaBE1476B4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/PUT/users/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/PUT/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.PUT..users.profile"
   }
  },
  "BadmintonClubApiusersprofilePUT65FE6768": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UpdateProfileLambdaBE1476B4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApiusersprofileAB9B630A"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/users/profile/PUT/Resource"
   }
  },
  "BadmintonClubApibookingsD65E354D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BadmintonClubApi5D28A112",
      "RootResourceId"
     ]
    },
    "PathPart": "bookings",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/bookings/Resource"
   }
  },
  "BadmintonClubApibookingsOPTIONS29D17A0C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApibookingsD65E354D"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/bookings/OPTIONS/Resource"
   }
  },
  "BadmintonClubApibookingsPOSTApiPermissionBadmintonClubStackBadmintonClubApi105BDD2APOSTbookingsFEC44124": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateBookingLambdaFCD2A497",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/POST/bookings"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/bookings/POST/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.POST..bookings"
   }
  },
  "BadmintonClubApibookingsPOSTApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2APOSTbookings69AD4664": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateBookingLambdaFCD2A497",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/POST/bookings"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/bookings/POST/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.POST..bookings"
   }
  },
  "BadmintonClubApibookingsPOSTBB420E48": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateBookingLambdaFCD2A497",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApibookingsD65E354D"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/bookings/POST/Resource"
   }
  },
  "BadmintonClubApicourtsFED2D4E7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BadmintonClubApi5D28A112",
      "RootResourceId"
     ]
    },
    "PathPart": "courts",
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/Resource"
   }
  },
  "BadmintonClubApicourtsOPTIONSFE3EEA5A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "BadmintonClubApicourtsFED2D4E7"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/OPTIONS/Resource"
   }
  },
  "BadmintonClubApicourtsPOSTApiPermissionBadmintonClubStackBadmintonClubApi105BDD2APOSTcourtsCFAC6DE6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateCourtLambdaDE87D144",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/POST/courts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/POST/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.POST..courts"
   }
  },
  "BadmintonClubApicourtsPOSTApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2APOSTcourts9BBFA889": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateCourtLambdaDE87D144",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/POST/courts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/POST/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.POST..courts"
   }
  },
  "BadmintonClubApicourtsPOST133303C1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateCourtLambdaDE87D144",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApicourtsFED2D4E7"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/POST/Resource"
   }
  },
  "BadmintonClubApicourtsGETApiPermissionBadmintonClubStackBadmintonClubApi105BDD2AGETcourts5A9F7556": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCourtsLambda6B243DA6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/",
       {
        "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
       },
       "/GET/courts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/GET/ApiPermission.BadmintonClubStackBadmintonClubApi105BDD2A.GET..courts"
   }
  },
  "BadmintonClubApicourtsGETApiPermissionTestBadmintonClubStackBadmintonClubApi105BDD2AGETcourtsFC718AB3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCourtsLambda6B243DA6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:ap-southeast-2:762233758459:",
       {
        "Ref": "BadmintonClubApi5D28A112"
       },
       "/test-invoke-stage/GET/courts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/GET/ApiPermission.Test.BadmintonClubStackBadmintonClubApi105BDD2A.GET..courts"
   }
  },
  "BadmintonClubApicourtsGET8B94915C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCourtsLambda6B243DA6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BadmintonClubApicourtsFED2D4E7"
    },
    "RestApiId": {
     "Ref": "BadmintonClubApi5D28A112"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubApi/Default/courts/GET/Resource"
   }
  },
  "BadmintonClubEventBusC0B0F823": {
   "Type": "AWS::Events::EventBus",
   "Properties": {
    "Name": "badminton-club-dev"
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BadmintonClubEventBus/Resource"
   }
  },
  "BookingProcessorRule0123729B": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": {
     "Ref": "BadmintonClubEventBusC0B0F823"
    },
    "EventPattern": {
     "source": [
      "badminton-club"
     ],
     "detail-type": [
      "User Registered",
      "Booking Created",
      "Court Created"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "BookingProcessorLambdaB8164A7A",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BookingProcessorRule/Resource"
   }
  },
  "BookingProcessorRuleAllowEventRuleBadmintonClubStackBookingProcessorLambda7C1C906E9FF9B54D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BookingProcessorLambdaB8164A7A",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "BookingProcessorRule0123729B",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/BookingProcessorRule/AllowEventRuleBadmintonClubStackBookingProcessorLambda7C1C906E"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPzU7DMBCEn6V3xzSBF2j4OyGqgLhWm3gJbvwTZe1WUeR3x3YDlNPMzqy+1Va83Ja83MCZik4MhZItX94cdAOL0WERswFtRQzfoVX4UbH7T/OsbAsqB4Ep0K0Avjx50zlpTVq49nuctCSKU2ASNF8aqzAVWfdWyW7Oe9kFRrcHIEJHfJckzrz23YCuBkIGo+zB4RnmCEJyu1Fm1mofcFR21mhcSq+m+FKfr15M3Ld+6jAzX9B9WZHK1f20Kzn7wPAUQcSXx6S1p9T++savT0UN4Y+Qf0g3pelT/+rd6N1/sLEC+ZFuTtUdL/l2cyQpi8kbJzXy5qLf6H4Qt6gBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "BadmintonClubStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "BadmintonClubApiEndpoint3E1497E5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "BadmintonClubApi5D28A112"
      },
      ".execute-api.ap-southeast-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "BadmintonClubApiDeploymentStagedevBF744B2F"
      },
      "/"
     ]
    ]
   }
  },
  "ApiGatewayRestApiId": {
   "Value": {
    "Ref": "BadmintonClubApi5D28A112"
   }
  },
  "ApiGatewayRestApiRootResourceId": {
   "Value": {
    "Fn::GetAtt": [
     "BadmintonClubApi5D28A112",
     "RootResourceId"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}