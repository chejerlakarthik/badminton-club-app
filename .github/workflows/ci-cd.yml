name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: npm ci

      - name: Build backend
        run: npm run build

      - name: Cache infrastructure dependencies
        uses: actions/cache@v4
        with:
          path: infrastructure/node_modules
          key: ${{ runner.os }}-infra-${{ hashFiles('infrastructure/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-infra-

      - name: Install infrastructure dependencies
        working-directory: ./infrastructure
        run: npm ci

      - name: Build infrastructure (CDK synth)
        working-directory: ./infrastructure
        run: npm run build && npm run cdk synth

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Deploy infrastructure (CDK deploy)
        working-directory: ./infrastructure
        run: npx cdk deploy --require-approval never

      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Deploy frontend to S3
        run: aws s3 sync ./frontend/dist s3://${{ secrets.FRONTEND_S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
